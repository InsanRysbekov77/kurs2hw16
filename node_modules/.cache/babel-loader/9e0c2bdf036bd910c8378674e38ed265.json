{"ast":null,"code":"var _jsxFileName = \"/Users/kubansadyrov/Desktop/kurs-02-lesson-05/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/authContext';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const storedUserInfo = localStorage.getItem('isLoggedIn');\n\n    if (storedUserInfo === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = async (email, password) => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: darkMode ? 'dark-mode' : 'light-mode',\n        children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: loginHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 23\n          }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n            onLogout: logoutHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"/5i2aHOXoW1Lru3CImY6VsC4PPc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","darkMode","setDarkMode","storedUserInfo","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem","onLogout"],"sources":["/Users/kubansadyrov/Desktop/kurs-02-lesson-05/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Login from './components/Login/Login'\nimport Home from './components/Home/Home'\nimport MainHeader from './components/MainHeader/MainHeader'\nimport AuthContext from './store/authContext'\nimport './App.css'\n\nfunction App() {\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false)\n\tconst [darkMode, setDarkMode] = useState(false)\n\n\tuseEffect(() => {\n\t\tconst storedUserInfo = localStorage.getItem('isLoggedIn')\n\t\tif (storedUserInfo === '1') {\n\t\t\tsetIsLoggedIn(true)\n\t\t}\n\t}, [])\n\n\tconst loginHandler = async (email, password) => {\n\t\tlocalStorage.setItem('isLoggedIn', '1')\n\t\tsetIsLoggedIn(true)\n\t}\n\n\tconst logoutHandler = () => {\n\t\tlocalStorage.removeItem('isLoggedIn')\n\t\tsetIsLoggedIn(false)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<AuthContext.Provider\n\t\t\t\tvalue={{ isLoggedIn: isLoggedIn, onLogout: logoutHandler }}\n\t\t\t>\n\t\t\t\t<div className={darkMode ? 'dark-mode' : 'light-mode'}>\n\t\t\t\t\t<MainHeader />\n\t\t\t\t\t<main>\n\t\t\t\t\t\t{!isLoggedIn && <Login onLogin={loginHandler} />}\n\t\t\t\t\t\t{isLoggedIn && <Home onLogout={logoutHandler} />}\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\t\t\t</AuthContext.Provider>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default App\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACd,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;EAEAC,SAAS,CAAC,MAAM;IACf,MAAMU,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAvB;;IACA,IAAIF,cAAc,KAAK,GAAvB,EAA4B;MAC3BH,aAAa,CAAC,IAAD,CAAb;IACA;EACD,CALQ,EAKN,EALM,CAAT;;EAOA,MAAMM,YAAY,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;IAC/CJ,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;IACAT,aAAa,CAAC,IAAD,CAAb;EACA,CAHD;;EAKA,MAAMU,aAAa,GAAG,MAAM;IAC3BN,YAAY,CAACO,UAAb,CAAwB,YAAxB;IACAX,aAAa,CAAC,KAAD,CAAb;EACA,CAHD;;EAKA,oBACC,QAAC,KAAD,CAAO,QAAP;IAAA,uBACC,QAAC,WAAD,CAAa,QAAb;MACC,KAAK,EAAE;QAAED,UAAU,EAAEA,UAAd;QAA0Ba,QAAQ,EAAEF;MAApC,CADR;MAAA,uBAGC;QAAK,SAAS,EAAET,QAAQ,GAAG,WAAH,GAAiB,YAAzC;QAAA,wBACC,QAAC,UAAD;UAAA;UAAA;UAAA;QAAA,QADD,eAEC;UAAA,WACE,CAACF,UAAD,iBAAe,QAAC,KAAD;YAAO,OAAO,EAAEO;UAAhB;YAAA;YAAA;YAAA;UAAA,QADjB,EAEEP,UAAU,iBAAI,QAAC,IAAD;YAAM,QAAQ,EAAEW;UAAhB;YAAA;YAAA;YAAA;UAAA,QAFhB;QAAA;UAAA;UAAA;UAAA;QAAA,QAFD;MAAA;QAAA;QAAA;QAAA;MAAA;IAHD;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADD;AAeA;;GApCQZ,G;;KAAAA,G;AAsCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}